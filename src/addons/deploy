#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
GREEN_PS3=$'\e[0;32m'

#########################################################################################
# external-dns
#########################################################################################
echo
echo -e "${BLUE}Deploy external-dns?"
tput sgr0
read -p "Y/N [N]: " external_dns

if [[ $external_dns =~ ^([yY][eE][sS]|[yY])$ ]]; then

  kubectl apply -f external-dns/external-dns.yaml
else
  echo -e "Skipping"
fi


#########################################################################################
# ingress
#########################################################################################
echo
echo -e "${BLUE}Deploy nginx ingress controller?"
tput sgr0
read -p "Y/N [N]: " nginx_ingress

if [[ $nginx_ingress =~ ^([yY][eE][sS]|[yY])$ ]]; then

  kubectl apply -f ingress/nginx/rbac.yaml
  kubectl apply -f ingress/nginx/nginx.lb.yaml

else
  echo -e "Skipping"
fi

#########################################################################################
# kube-lego
#########################################################################################
echo
echo -e "${BLUE}Deploy kube-lego?"
tput sgr0
read -p "Y/N [N]: " kube_lego

if [[ $kube_lego =~ ^([yY][eE][sS]|[yY])$ ]]; then

  kubectl apply -f kube-lego/rbac.yaml
  kubectl apply -f kube-lego/kube-lego.yaml

else
  echo -e "Skipping"
fi

echo -e "${GREEN}Done"
tput sgr0

#########################################################################################
# fluentd-kubernetes-cloudwatch
#########################################################################################
echo
echo -e "${BLUE}Deploy fluentd-kubernetes-cloudwatch?"
tput sgr0
read -p "Y/N [N]: " fluentd_cloudwatch

if [[ $fluentd_cloudwatch =~ ^([yY][eE][sS]|[yY])$ ]]; then

  kubectl apply -f fluentd-kubernetes-cloudwatch/log.ns.yaml
  kubectl apply -f fluentd-kubernetes-cloudwatch/fluentd.rbac.yaml
  #Custom Fluentd settings
  echo
  echo -e "${BLUE}Make sure you updated the configmap for fluentd with your custom configuration ${ORANGE}addons/fluentd/fluentd-kubernetes-cloudwatch/fluentd.cm.yaml ${BLUE}Press ENTER to continue"
  tput sgr0
  read -p " [ENTER]: " fluent_config
  echo
  kubectl apply -f fluentd-kubernetes-cloudwatch/fluentd.cm.yaml
  kubectl apply -f fluentd-kubernetes-cloudwatch/fluentd.ds.yaml

else
  echo -e "Skipping"
fi

echo -e "${GREEN}Done"
tput sgr0
